import pyxel
import math
import time
import datetime 

def render():

	points2 = [[67,44],[68,44],[69,44],[70,44],[71,44],[72,44],[73,44],[74,44],[75,44],[76,44],[77,44],[78,44],[79,44],[80,44],[81,44],[82,44],[83,44],[84,44],[85,44],[86,44],[87,44],[88,44],[89,44],[90,44],[91,44],[92,44],[93,44],[94,44],[95,44],[96,44],[97,44],[98,44],[99,44],[100,44],[101,44],[102,44],[103,44],[104,44],[105,44],[106,44],[107,44],[108,44],[109,44],[110,44],[111,44],[112,44],[113,44],[114,44],[115,44],[116,44],[117,44],[118,44],[119,44],[120,44],[121,44],[122,44],[123,44],[124,44],[125,44],[126,44],[127,44],[128,44],[129,44],[130,44],[131,44],[132,44],[133,44],[134,44],[135,44],[136,44],[137,44],[138,44],[139,44],[140,44],[141,44],[142,44],[143,44],[144,44],[145,44],[146,44],[147,44],[148,44],[149,44],[150,44],[151,44],[152,44],[153,44],[154,44],[155,44],[156,44],[157,44],[158,44],[159,44],[160,44],[161,44],[162,44],[163,44],[164,44],[165,44],[166,44],[167,44],[168,44],[169,44],[170,44],[171,44],[172,44],[173,44],[174,44],[175,44],[176,44],[177,44],[178,44],[179,44],[180,44],[181,44],[182,44],[183,44],[184,44],[185,44],[186,44],[187,44],[188,44],[189,44],[190,44],[191,44],[192,44],[193,44],[194,44],[194,44],[194,45],[194,46],[193,47],[193,48],[193,49],[193,50],[193,51],[193,52],[192,53],[192,54],[192,55],[192,56],[192,57],[191,58],[191,59],[191,60],[191,61],[191,62],[190,63],[190,64],[190,65],[190,66],[190,67],[190,68],[189,69],[189,70],[189,71],[189,72],[189,73],[188,74],[188,75],[188,76],[188,77],[188,78],[188,79],[187,80],[187,81],[187,82],[187,83],[187,84],[186,85],[186,86],[186,87],[186,88],[186,89],[186,90],[185,91],[185,92],[185,93],[185,94],[185,95],[184,96],[184,97],[184,98],[184,99],[184,100],[183,101],[183,102],[183,103],[183,104],[183,105],[183,106],[182,107],[182,108],[182,109],[182,110],[182,111],[181,112],[181,113],[181,114],[181,115],[181,116],[181,117],[180,118],[180,119],[180,120],[180,121],[180,122],[179,123],[179,124],[179,125],[179,126],[179,127],[178,128],[178,129],[178,130],[178,131],[178,132],[178,133],[177,134],[177,135],[177,136],[177,137],[177,138],[176,139],[176,140],[176,141],[176,142],[176,143],[176,144],[175,145],[175,146],[175,147],[175,148],[175,149],[174,150],[174,151],[174,152],[174,153],[174,154],[174,155],[173,156],[173,157],[173,158],[173,159],[173,160],[172,161],[172,162],[172,163],[172,164],[172,165],[171,166],[171,167],[171,168],[171,169],[171,170],[171,171],[170,172],[170,173],[170,174],[170,174],[169,173],[168,173],[167,172],[166,172],[165,171],[164,170],[163,170],[162,169],[161,168],[160,168],[159,167],[158,167],[157,166],[156,165],[155,165],[154,164],[153,164],[152,163],[151,162],[150,162],[149,161],[148,161],[147,160],[146,159],[145,159],[144,158],[143,157],[142,157],[141,156],[140,156],[139,155],[138,154],[137,154],[136,153],[135,153],[134,152],[133,151],[132,151],[131,150],[130,150],[129,149],[128,148],[127,148],[126,147],[125,146],[124,146],[123,145],[122,145],[121,144],[120,143],[119,143],[118,142],[117,142],[116,141],[115,140],[114,140],[113,139],[112,138],[111,138],[110,137],[109,137],[108,136],[107,135],[106,135],[105,134],[104,134],[103,133],[102,132],[101,132],[100,131],[99,131],[98,130],[97,129],[96,129],[95,128],[94,127],[93,127],[92,126],[91,126],[90,125],[89,124],[88,124],[87,123],[86,123],[85,122],[84,121],[83,121],[82,120],[81,119],[80,119],[79,118],[78,118],[77,117],[76,116],[75,116],[74,115],[73,115],[72,114],[71,113],[70,113],[69,112],[68,112],[67,111],[66,110],[65,110],[64,109],[63,108],[62,108],[61,107],[60,107],[59,106],[58,105],[57,105],[56,104],[55,104],[54,103],[53,102],[52,102],[51,101],[50,101],[49,100],[48,99],[47,99],[46,98],[45,97],[44,97],[43,96],[42,96],[41,95],[41,95],[42,94],[42,93],[43,92],[43,91],[44,90],[44,89],[45,88],[45,87],[46,86],[46,85],[47,84],[47,83],[48,82],[48,81],[49,80],[49,79],[50,78],[50,77],[51,76],[51,75],[52,74],[52,73],[53,72],[53,71],[54,70],[54,69],[55,68],[55,67],[56,66],[56,65],[57,64],[57,63],[58,62],[58,61],[59,60],[59,59],[60,58],[60,57],[61,56],[61,55],[62,54],[62,53],[63,52],[63,51],[64,50],[64,49],[65,48],[65,47],[66,46],[66,45],[67,44]]
	
	for i in points2:
		pyxel.pset(i[0],i[1],10)
		


	
def update():

	"""This function just maps the Q key to `pyxel.quit`,
	which works just like `sys.exit`."""

	if pyxel.btnp(pyxel.KEY_Q): pyxel.quit()

def draw():

	"""This function clears the screen and draws a single
	pixel, whenever the buffer needs updating. Note that
	colors are specified as palette indexes (0-15)."""

	pyxel.cls(0)			# clear screen (color)


	render()
	pyxel.mouse(True)



pyxel.init(250, 250, caption='Render Receiver')		# initilize gui (width, height)
pyxel.run(update, draw) 






"""

from tkinter import*

root = Tk()

class GUI(Canvas):
	'''inherits Canvas class (all Canvas methodes, attributes will be accessible)
	   You can add your customized methods here.
	'''
	def __init__(self,master,*args,**kwargs):
		Canvas.__init__(self, master=master, *args, **kwargs)
		self.master.title("Receiver")

polygon = GUI(root)

#polygon.create_polygon([arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8],	 outline='red', 
#			fill='gray', width=2)


polygon.pack()
root.mainloop()
"""